volumes:
  minio_activities:
  activities_pdata:
  redis_data:
    driver: local

services:
  minio:
    image: minio/minio:latest
    container_name: experiments_minio
    ports:
      - '9001:9001'
      - '9000:9000'
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - CONSOLE_ACCESS_KEY=test
      - CONSOLE_SECRET_KEY=test
    command: server --address ":9000" --console-address ":9001" /data
    volumes:
      - minio_activities:/data

  postgres-compose:
    image: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=activities
    ports:
      - "5432:5432"
    volumes:
      - activities_pdata:/var/lib/postgresql/data

  java-app:
    image: mr3iscuit/activities:latest
    container_name: activities_backend
    ports:
        - "9090:9090"
    depends_on:
        - postgres-compose
        - minio
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=compose
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-compose:5432/activities
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=12345678
      - MINIO_URL=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis

  react-app:
    image: mr3iscuit/pareto-front:latest
    container_name: activities_front
    ports:
      - "8080:5173"
    depends_on:
      - java-app
    pull_policy: always

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=redis
    command: [ "redis-server", "--requirepass", "redis" ]
    volumes:
      - redis_data:/data
